system:
  id_system: accord


###############################################################################
host:
  localhost:
    hostname:        'localhost'
    acct_run:        ''
    acct_provision:  ''
    port_range:      '8090-9000'
    dirpath_log:     ''
    launch_cmd:      ''
    environment:     'e002_general_research'
    log_level:       'TRACE'


###############################################################################
process:
  proc_main:
    host: localhost


###############################################################################
node:

  # ---------------------------------------------------------------------------
  # System clock and state management for the entire system.
  #
  ctrl_sys:
    process:          proc_main
    req_host_cfg:     default_configuration
    functionality:
      py_module:      cl.ctrl.sys.ic00_edict
    state_type:       py_dict
    config:
      frequency_hz:   2

  # ---------------------------------------------------------------------------
  # State management for the main process.
  #
  ctrl_main:
    process:          proc_main
    req_host_cfg:     default_configuration
    functionality:
      py_module:      cl.ctrl.proc.ic00_edict
    state_type:       py_dict

  # ---------------------------------------------------------------------------
  # Discord bot integration.
  #
  msgmux:
    process:          proc_main
    req_host_cfg:     default_configuration
    functionality:
      py_module:      cl.net.discord.mux.ic00_edict
    state_type:       py_dict

  discord:
    process:          proc_main
    req_host_cfg:     default_configuration
    functionality:
      py_module:      cl.net.discord.bot.ic00_edict
    state_type:       py_dict
    config:
      filepath_env:   Null
      envvar_key:     TOKEN_DISCORD_BOT_ACCORD
      secs_sleep:     0.5

  command:
    process:          proc_main
    req_host_cfg:     default_configuration
    functionality:
      py_module:      cl.net.discord.cmd.ic00_edict
    state_type:       py_dict
    config:
      cmd:
      - id_cmd:       ask
        desc:         Ask a question.
        output:
        - facilitation
      - id_cmd:       summarize
        desc:         Summarise the responses so far.
        output:
        - facilitation
        - aggregation
      - id_cmd:       debug
        desc:         Print debug information.
        output:
        - facilitation

  # ---------------------------------------------------------------------------
  # Meeting tasks
  #
  facilitation:
    process:        proc_main
    req_host_cfg:   default_configuration
    functionality:
      py_module:    accord.facilitation.ic00_edict
    state_type:     py_dict

  aggregation:
    process:        proc_main
    req_host_cfg:   default_configuration
    functionality:
      py_module:    accord.aggregation.ic00_edict
    state_type:     py_dict

  openai:
    process:        proc_main
    req_host_cfg:   default_configuration
    functionality:
      py_module:    cl.net.openai.request.ic00_edict
    state_type:     py_dict
    config:
      filepath_env:         Null
      envvar_key:           OPENAI_API_KEY
      secs_interval:        0.1
      is_bit:               False
      is_async:             True
      default:
        id_endpoint:        'chat_completions'
        model:              'gpt-3.5-turbo'
        temperature:        1.0
        n:                  1
        stream:             False
        presence_penalty:   0.0
        frequency_penalty:  0.0
        user:               ''

  distribution:
    process:        proc_main
    req_host_cfg:   default_configuration
    functionality:
      py_module:    accord.distribution.ic00_edict
    state_type:     py_dict

  # ---------------------------------------------------------------------------
  # Logging.
  #
  log:
    process:        proc_main
    req_host_cfg:   default_configuration
    functionality:
      py_module:    cl.util.noop.ic00_edict
    state_type:     py_dict


###############################################################################
edge:

# -----------------------------------------------------------------------------
# Fan out from the system controller
# component to all of the process
# specific subsidiary controller
# components.
#

- owner: ctrl_sys
  data:  py_dict
  src:   ctrl_sys.outputs.ctrl_main
  dst:   ctrl_main.inputs.ctrl

- owner: ctrl_main
  data:  py_dict
  src:   ctrl_main.outputs.ctrl_discord
  dst:   discord.inputs.ctrl

- owner: ctrl_main
  data:  py_dict
  src:   ctrl_main.outputs.ctrl_command
  dst:   command.inputs.ctrl

- owner: ctrl_main
  data:  py_dict
  src:   ctrl_main.outputs.ctrl_question
  dst:   facilitation.inputs.ctrl

- owner: ctrl_main
  data:  py_dict
  src:   ctrl_main.outputs.ctrl_summary
  dst:   aggregation.inputs.ctrl

- owner: ctrl_main
  data:  py_dict
  src:   ctrl_main.outputs.ctrl_msgmux
  dst:   msgmux.inputs.ctrl

- owner: ctrl_main
  data:  py_dict
  src:   ctrl_main.outputs.ctrl_log
  dst:   log.inputs.ctrl

#  Functional chain for discord bot configuration and mux/demux.

- owner: msgmux
  data:  py_dict
  src:   msgmux.outputs.msg
  dst:   discord.inputs.msg

- owner: discord
  data:  py_dict
  src:   discord.outputs.cmd
  dst:   command.inputs.cmd

- owner: command
  data:  py_dict
  src:   command.outputs.cmd
  dst:   discord.inputs.cmd
  dirn:  feedback

# Functional chain for facilitation.

- owner: command
  data:  py_dict
  src:   command.outputs.facilitation
  dst:   facilitation.inputs.cmd

- owner: facilitation
  data:  py_dict
  src:   facilitation.outputs.msg
  dst:   msgmux.inputs.facilitation
  dirn:  feedback

# Functional chain for summary generation.

- owner: discord
  data:  py_dict
  src:   discord.outputs.msg
  dst:   aggregation.inputs.msg

- owner: command
  data:  py_dict
  src:   command.outputs.aggregation
  dst:   aggregation.inputs.cmd

- owner: aggregation
  data:  py_dict
  src:   aggregation.outputs.request
  dst:   openai.inputs.request

- owner: openai
  data:  py_dict
  src:   openai.outputs.result
  dst:   distribution.inputs.result

- owner: openai
  data:  py_dict
  src:   openai.outputs.error
  dst:   log.inputs.error

- owner: distribution
  data:  py_dict
  src:   distribution.outputs.msg
  dst:   msgmux.inputs.summary
  dirn:  feedback

# Logging

- owner: discord
  data:  py_dict
  src:   discord.outputs.log
  dst:   log.inputs.discord

- owner: facilitation
  data:  py_dict
  src:   facilitation.outputs.log
  dst:   log.inputs.facilitation

- owner: aggregation
  data:  py_dict
  src:   aggregation.outputs.log
  dst:   log.inputs.aggregation



###############################################################################
data:
  py_list:  py_list
  py_dict:  py_dict
  py_str:   py_str


###############################################################################
req_host_cfg:
  default_configuration:
    role:
      - default_role


###############################################################################
role:
  default_role:
    tasks:
      - name: Update apt-get repo and cache
        become:        yes
        become_user:   root
        become_method: sudo
        apt:
          update_cache:     yes
          force_apt_get:    yes
          cache_valid_time: 3600
